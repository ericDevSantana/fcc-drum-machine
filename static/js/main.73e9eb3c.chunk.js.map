{"version":3,"sources":["component/DrumBoard.module.css","component/DrumMachine.module.css","component/Display.module.css","component/Display.js","component/DrumPad.js","component/DrumBoard.js","component/DrumMachine.js","App.js","index.js"],"names":["module","exports","Display","props","Fragment","id","className","styles","text","DrumPad","innerText","audioClipName","audioSrc","onPress","audioHandler","useCallback","btn","document","getElementById","style","background","setTimeout","sound","currentTime","soundPromise","play","undefined","then","_","catch","error","keyDownHandler","event","key","React","useEffect","addEventListener","removeEventListener","onClick","src","DrumBoard","map","drumPad","onTextChange","DrumMachine","useState","displayText","setDisplayText","App","ReactDOM","render","StrictMode"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,aAAa,8BAA8B,aAAa,gC,iBCA1ED,EAAOC,QAAU,CAAC,eAAe,oC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,2B,gMCYbC,EAVC,SAACC,GACf,OACE,cAAC,IAAMC,SAAP,UACE,qBAAKC,GAAG,UAAUC,UAAWC,IAAM,QAAnC,SACGJ,EAAMK,U,gBC6CAC,G,MAjDC,SAACN,GAEf,IAAQO,EAAgDP,EAAhDO,UAAWC,EAAqCR,EAArCQ,cAAeC,EAAsBT,EAAtBS,SAAUC,EAAYV,EAAZU,QAEtCC,EAAeC,uBAAY,WAE/BF,EAAQF,GAGR,IAAMK,EAAMC,SAASC,eAAeP,GACpCK,EAAIG,MAAMC,WAAa,SACvBC,YAAW,WACTL,EAAIG,MAAMC,WAAa,8CACtB,KAGH,IAAME,EAAQL,SAASC,eAAeR,GACtCY,EAAMC,YAAc,EACpB,IAAMC,EAAeF,EAAMG,YAGNC,IAAjBF,GACFA,EAAaG,MAAK,SAACC,OAAUC,OAAM,SAACC,SAErC,CAACpB,EAAWC,EAAeE,IAExBkB,EAAiBhB,uBACrB,SAACiB,GACKA,EAAMC,MAAQvB,GAChBI,MAGJ,CAACA,EAAcJ,IASjB,OALAwB,IAAMC,WAAU,WAEd,OADAlB,SAASmB,iBAAiB,UAAWL,GAC9B,kBAAMd,SAASoB,oBAAoB,UAAWN,MACpD,CAACA,IAGF,sBAAKzB,UAAU,WAAWD,GAAIM,EAAe2B,QAASxB,EAAtD,UACGJ,EACD,uBAAOJ,UAAU,OAAOD,GAAIK,EAAW6B,IAAK3B,SC2BnC4B,EAtEG,SAACrC,GAiDjB,OACE,cAAC,IAAMC,SAAP,UACE,qBAAKE,UAAWC,IAAO,cAAvB,SACE,qBAAKD,UAAWC,IAAO,cAAvB,SAnDW,CACf,CACEG,UAAW,IACXC,cAAe,WACfC,SAAU,4DAEZ,CACEF,UAAW,IACXC,cAAe,WACfC,SAAU,4DAEZ,CACEF,UAAW,IACXC,cAAe,WACfC,SAAU,4DAEZ,CACEF,UAAW,IACXC,cAAe,aACfC,SAAU,8DAEZ,CACEF,UAAW,IACXC,cAAe,WACfC,SAAU,4DAEZ,CACEF,UAAW,IACXC,cAAe,SACfC,SAAU,0DAEZ,CACEF,UAAW,IACXC,cAAe,aACfC,SAAU,8DAEZ,CACEF,UAAW,IACXC,cAAe,aACfC,SAAU,8DAEZ,CACEF,UAAW,IACXC,cAAe,SACfC,SAAU,2DAQI6B,KAAI,SAACC,GACb,OACE,cAAC,EAAD,CAEEhC,UAAWgC,EAAQhC,UACnBC,cAAe+B,EAAQ/B,cACvBC,SAAU8B,EAAQ9B,SAClBC,QAASV,EAAMwC,cAJVD,EAAQhC,qBCxCdkC,EAfK,WAElB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAKA,OACE,sBAAK1C,GAAG,eAAeC,UAAWC,IAAO,gBAAzC,UACE,cAAC,EAAD,CAASC,KAAMsC,IACf,cAAC,EAAD,CAAWH,aAPiB,SAACnC,GAC/BuC,EAAevC,UCEJwC,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,EAAD,OCDN2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,W","file":"static/js/main.73e9eb3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"drum-board\":\"DrumBoard_drum-board__e0oKu\",\"drum-panel\":\"DrumBoard_drum-panel__1r6TA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drum-machine\":\"DrumMachine_drum-machine__1lyxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__1E_5r\"};","import React from \"react\";\r\nimport styles from \"./Display.module.css\";\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"display\" className={styles[\"display\"]}>\r\n        {props.text}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { useCallback } from \"react\";\r\nimport \"./DrumPad.css\";\r\n\r\nconst DrumPad = (props) => {\r\n  //Destructuring props\r\n  const { innerText, audioClipName, audioSrc, onPress } = props;\r\n\r\n  const audioHandler = useCallback(() => {\r\n    //Lifting state up to Display the audioclip name\r\n    onPress(audioClipName);\r\n\r\n    //getting div drumPad to apply styling after pressing a key...after 100ms return to previous color\r\n    const btn = document.getElementById(audioClipName);\r\n    btn.style.background = \"yellow\";\r\n    setTimeout(() => {\r\n      btn.style.background = \"linear-gradient(145deg, #aaaaaa, #cacaca)\";\r\n    }, 100);\r\n\r\n    //gettind html audio child\r\n    const sound = document.getElementById(innerText);\r\n    sound.currentTime = 0;\r\n    const soundPromise = sound.play();\r\n\r\n    //catching error if promise returned by play() is successfull\r\n    if (soundPromise !== undefined) {\r\n      soundPromise.then((_) => {}).catch((error) => {});\r\n    }\r\n  }, [innerText, audioClipName, onPress]);\r\n\r\n  const keyDownHandler = useCallback(\r\n    (event) => {\r\n      if (event.key === innerText) {\r\n        audioHandler();\r\n      }\r\n    },\r\n    [audioHandler, innerText]\r\n  );\r\n\r\n  //addEventListener ONCE the component is rendered and then cleanup removing event listener after component is dismounted\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"keydown\", keyDownHandler);\r\n    return () => document.removeEventListener(\"keydown\", keyDownHandler);\r\n  }, [keyDownHandler]);\r\n\r\n  return (\r\n    <div className=\"drum-pad\" id={audioClipName} onClick={audioHandler}>\r\n      {innerText}\r\n      <audio className=\"clip\" id={innerText} src={audioSrc}></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrumPad;\r\n","import React from \"react\";\r\nimport styles from \"./DrumBoard.module.css\";\r\nimport DrumPad from \"./DrumPad\";\r\n\r\nconst DrumBoard = (props) => {\r\n  const DrumPads = [\r\n    {\r\n      innerText: \"Q\",\r\n      audioClipName: \"Heater-1\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\r\n    },\r\n    {\r\n      innerText: \"W\",\r\n      audioClipName: \"Heater-2\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\r\n    },\r\n    {\r\n      innerText: \"E\",\r\n      audioClipName: \"Heater-3\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\r\n    },\r\n    {\r\n      innerText: \"A\",\r\n      audioClipName: \"Heater-4_1\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\r\n    },\r\n    {\r\n      innerText: \"S\",\r\n      audioClipName: \"Heater-6\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\r\n    },\r\n    {\r\n      innerText: \"D\",\r\n      audioClipName: \"Dsc_Oh\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\r\n    },\r\n    {\r\n      innerText: \"Z\",\r\n      audioClipName: \"Kick_n_Hat\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\r\n    },\r\n    {\r\n      innerText: \"X\",\r\n      audioClipName: \"RP4_KICK_1\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\r\n    },\r\n    {\r\n      innerText: \"C\",\r\n      audioClipName: \"Cev_H2\",\r\n      audioSrc: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles[\"drum-board\"]}>\r\n        <div className={styles[\"drum-panel\"]}>\r\n          {DrumPads.map((drumPad) => {\r\n            return (\r\n              <DrumPad\r\n                key={drumPad.innerText}\r\n                innerText={drumPad.innerText}\r\n                audioClipName={drumPad.audioClipName}\r\n                audioSrc={drumPad.audioSrc}\r\n                onPress={props.onTextChange}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DrumBoard;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./DrumMachine.module.css\";\r\nimport Display from \"./Display\";\r\nimport DrumBoard from \"./DrumBoard\";\r\n\r\nconst DrumMachine = () => {\r\n  //state to store the audioclip name to pass to Display component and set the new state everytime a drumpad is pressed\r\n  const [displayText, setDisplayText] = useState(\"\");\r\n  const audioDescriptionHandler = (text) => {\r\n    setDisplayText(text);\r\n  };\r\n\r\n  return (\r\n    <div id=\"drum-machine\" className={styles[\"drum-machine\"]}>\r\n      <Display text={displayText} />\r\n      <DrumBoard onTextChange={audioDescriptionHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrumMachine;\r\n","import \"./App.css\";\nimport DrumMachine from \"./component/DrumMachine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}